
******************************************* EXAMPLE SETUP ************************************************

# IMPORT SDTL

blazegraph destroy --dataset kb
blazegraph create --dataset kb
blazegraph import --format jsonld --file ../data/compute-sdtl.jsonld

------------------------------------------- SETUP OUTPUTS ------------------------------------------------



******************************************* EXAMPLE Q1 ************************************************

# WHAT COMMANDS ARE EXECUTED BY THE SCRIPT?

blazegraph select --format table << __END_QUERY__

    PREFIX sdtl: <https://rdf-vocabulary.ddialliance.org/sdtl#>

    SELECT DISTINCT ?command ?source_line ?source_text
    WHERE {
        ?program rdf:type sdtl:Program .
        ?program sdtl:Commands ?command .
        ?command sdtl:SourceInformation ?source_info .
        ?source_info sdtl:LineNumberStart ?source_line .
        ?source_info sdtl:OriginalSourceText ?source_text .
    } ORDER BY ?line

__END_QUERY__

------------------------------------------- Q1 OUTPUTS ------------------------------------------------

command    | source_line | source_text
==================================================================================
:load/1    | 4           | df = pd.read_csv('../data/df.csv')
:compute/1 | 8           | df['A'] = 3
:compute/2 | 12          | df['B'] = df.B + 6.5
:compute/3 | 16          | df['C'] = df.A - df.B
:load/2    | 20          | temps = pd.read_csv('../data/temps.csv')
:compute/4 | 24          | temps = temps.assign(Celsius=((temps.Fahrenheit - 32) * 5 / 9))
:compute/5 | 28          | temps = temps.assign(Kelvin=(temps.Celsius + 273))
:save/1    | 32          | df.to_csv('outputs/df_updated.csv', index=False)
:save/2    | 35          | temps.to_csv('outputs/temps_updated.csv', index=False)


******************************************* EXAMPLE Q2 ************************************************

# WHAT DATA FILES ARE LOADED BY THE SCRIPT?

blazegraph select --format table << __END_QUERY__

    PREFIX sdtl: <https://rdf-vocabulary.ddialliance.org/sdtl#>

    SELECT DISTINCT ?file_name ?command ?source_line ?source_text
    WHERE {
        ?program rdf:type sdtl:Program .
        ?program sdtl:Commands ?command .
        ?command rdf:type sdtl:Load .
        ?command sdtl:FileName ?file_name .
        ?command sdtl:SourceInformation ?source_info .
        ?source_info sdtl:LineNumberStart ?source_line .
        ?source_info sdtl:OriginalSourceText ?source_text .
    }

__END_QUERY__

------------------------------------------- Q2 OUTPUTS ------------------------------------------------

file_name | command | source_line | source_text
=====================================================================
df.csv    | :load/1 | 4           | df = pd.read_csv('../data/df.csv')
temps.csv | :load/2 | 20          | temps = pd.read_csv('../data/temps.csv')


******************************************* EXAMPLE Q3 ************************************************

# WHAT DATA FILES ARE SAVED BY THE SCRIPT?

blazegraph select --format table << __END_QUERY__

    PREFIX sdtl: <https://rdf-vocabulary.ddialliance.org/sdtl#>

    SELECT DISTINCT ?file_name ?command ?source_line ?source_text
    WHERE {
        ?program rdf:type sdtl:Program .
        ?program sdtl:Commands ?command .
        ?command rdf:type sdtl:Save .
        ?command sdtl:FileName ?file_name .
        ?command sdtl:SourceInformation ?source_info .
        ?source_info sdtl:LineNumberStart ?source_line .
        ?source_info sdtl:OriginalSourceText ?source_text .
    }

__END_QUERY__

------------------------------------------- Q3 OUTPUTS ------------------------------------------------

file_name         | command | source_line | source_text
===========================================================================================
df_updated.csv    | :save/1 | 32          | df.to_csv('outputs/df_updated.csv', index=False)
temps_updated.csv | :save/2 | 35          | temps.to_csv('outputs/temps_updated.csv', index=False)


******************************************* EXAMPLE Q4 ************************************************

# WHAT VARIABLES ARE LOADED BY THE SCRIPT?

blazegraph select --format table << __END_QUERY__

    PREFIX sdtl: <https://rdf-vocabulary.ddialliance.org/sdtl#>

    SELECT DISTINCT ?loaded_variable ?dataframe ?source_line ?source_text
    WHERE {
        ?program rdf:type sdtl:Program .
        ?program sdtl:Commands ?command .
        ?command rdf:type sdtl:Load .
        ?command sdtl:ProducesDataframe ?dataframe_description .
        ?dataframe_description sdtl:DataframeName ?dataframe .
        ?dataframe_description sdtl:VariableInventory ?loaded_variable .
        ?command sdtl:SourceInformation ?source_info .
        ?source_info sdtl:LineNumberStart ?source_line .
        ?source_info sdtl:OriginalSourceText ?source_text .
    }

__END_QUERY__

------------------------------------------- Q4 OUTPUTS ------------------------------------------------

loaded_variable | dataframe | source_line | source_text
====================================================================
A               | df        | 4           | df = pd.read_csv('../data/df.csv')
B               | df        | 4           | df = pd.read_csv('../data/df.csv')
Fahrenheit      | temps     | 20          | temps = pd.read_csv('../data/temps.csv')


******************************************* EXAMPLE Q5 ************************************************

# WHAT VARIABLES ARE SAVED BY THE SCRIPT?

blazegraph select --format table << __END_QUERY__

    PREFIX sdtl: <https://rdf-vocabulary.ddialliance.org/sdtl#>

    SELECT DISTINCT ?saved_variable ?dataframe ?source_line ?source_text
    WHERE {
        ?program rdf:type sdtl:Program .
        ?program sdtl:Commands ?command .
        ?command rdf:type sdtl:Save .
        ?command sdtl:ConsumesDataframe ?dataframe_description .
        ?dataframe_description sdtl:DataframeName ?dataframe .
        ?dataframe_description sdtl:VariableInventory ?saved_variable .
        ?command sdtl:SourceInformation ?source_info .
        ?source_info sdtl:LineNumberStart ?source_line .
        ?source_info sdtl:OriginalSourceText ?source_text .
    }

__END_QUERY__

------------------------------------------- Q5 OUTPUTS ------------------------------------------------

saved_variable | dataframe | source_line | source_text
==================================================================================
A              | df        | 32          | df.to_csv('outputs/df_updated.csv', index=False)
B              | df        | 32          | df.to_csv('outputs/df_updated.csv', index=False)
C              | df        | 32          | df.to_csv('outputs/df_updated.csv', index=False)
Celsius        | temps     | 35          | temps.to_csv('outputs/temps_updated.csv', index=False)
Fahrenheit     | temps     | 35          | temps.to_csv('outputs/temps_updated.csv', index=False)
Kelvin         | temps     | 35          | temps.to_csv('outputs/temps_updated.csv', index=False)


******************************************* EXAMPLE Q6 ************************************************

# WHAT COMMANDS UPDATE EACH DATAFRAME?

blazegraph select --format table << __END_QUERY__

    PREFIX sdtl: <https://rdf-vocabulary.ddialliance.org/sdtl#>

    SELECT DISTINCT ?dataframe ?command ?source_line ?source_text
    WHERE {
        ?program rdf:type sdtl:Program .
        ?program sdtl:Commands ?command .
        ?command sdtl:ProducesDataframe ?dataframe_description .
        ?dataframe_description sdtl:DataframeName ?dataframe .
        ?dataframe_description sdtl:VariableInventory ?variable .
        ?command sdtl:SourceInformation ?source_info .
        ?source_info sdtl:LineNumberStart ?source_line .
        ?source_info sdtl:OriginalSourceText ?source_text .
    } ORDER BY ?dataframe ?source_line

__END_QUERY__

------------------------------------------- Q6 OUTPUTS ------------------------------------------------

dataframe | command    | source_line | source_text
===========================================================================================
df        | :load/1    | 4           | df = pd.read_csv('../data/df.csv')
df        | :compute/1 | 8           | df['A'] = 3
df        | :compute/2 | 12          | df['B'] = df.B + 6.5
df        | :compute/3 | 16          | df['C'] = df.A - df.B
temps     | :load/2    | 20          | temps = pd.read_csv('../data/temps.csv')
temps     | :compute/4 | 24          | temps = temps.assign(Celsius=((temps.Fahrenheit - 32) * 5 / 9))
temps     | :compute/5 | 28          | temps = temps.assign(Kelvin=(temps.Celsius + 273))


******************************************* EXAMPLE Q7 ************************************************

# WHAT COMMANDS UPDATE EACH VARIABLE?

blazegraph select --format table << __END_QUERY__

    PREFIX sdtl: <https://rdf-vocabulary.ddialliance.org/sdtl#>

    SELECT DISTINCT ?updated_variable ?command ?source_line ?source_text
    WHERE {
        ?program rdf:type sdtl:Program .
        ?program sdtl:Commands ?command .
        ?command sdtl:Variable ?variable .
        ?variable sdtl:VariableName ?updated_variable .
        ?command sdtl:SourceInformation ?source_info .
        ?source_info sdtl:LineNumberStart ?source_line .
        ?source_info sdtl:OriginalSourceText ?source_text .
    } ORDER BY ?variable ?source_line

__END_QUERY__

------------------------------------------- Q7 OUTPUTS ------------------------------------------------

updated_variable | command    | source_line | source_text
=============================================================================================
A                | :compute/1 | 8           | df['A'] = 3
B                | :compute/2 | 12          | df['B'] = df.B + 6.5
C                | :compute/3 | 16          | df['C'] = df.A - df.B
Celsius          | :compute/4 | 24          | temps = temps.assign(Celsius=((temps.Fahrenheit - 32) * 5 / 9))
Kelvin           | :compute/5 | 28          | temps = temps.assign(Kelvin=(temps.Celsius + 273))


******************************************* EXAMPLE Q8 ************************************************

# WHAT COMMANDS USE EACH VARIABLE?

blazegraph select --format table << __END_QUERY__

    PREFIX sdtl: <https://rdf-vocabulary.ddialliance.org/sdtl#>

    SELECT DISTINCT ?used_variable ?command ?source_line ?source_text
    WHERE {
        ?program rdf:type sdtl:Program .
        ?program sdtl:Commands ?command .
        ?command sdtl:Expression ?expression .
        ?expression (sdtl:Arguments/sdtl:ArgumentValue)+/sdtl:VariableName ?used_variable .
        ?command sdtl:SourceInformation ?source_info .
        ?source_info sdtl:LineNumberStart ?source_line .
        ?source_info sdtl:OriginalSourceText ?source_text .
    } ORDER BY ?used_variable ?source_line

__END_QUERY__

------------------------------------------- Q8 OUTPUTS ------------------------------------------------

used_variable | command    | source_line | source_text
================================================================================================
A             | :compute/3 | 16          | df['C'] = df.A - df.B
B             | :compute/2 | 12          | df['B'] = df.B + 6.5
B             | :compute/3 | 16          | df['C'] = df.A - df.B
Celsius       | :compute/5 | 28          | temps = temps.assign(Kelvin=(temps.Celsius + 273))
Fahrenheit    | :compute/4 | 24          | temps = temps.assign(Celsius=((temps.Fahrenheit - 32) * 5 / 9))


******************************************* EXAMPLE Q9 ************************************************

# WHAT VARIABLES WERE DIRECTLY AFFECTED BY OTHER VARIABLES?

blazegraph select --format table << __END_QUERY__

    PREFIX sdtl: <https://rdf-vocabulary.ddialliance.org/sdtl#>

    SELECT DISTINCT ?affected_variable ?affecting_variable ?command ?source_line ?source_text
    WHERE {
        ?program rdf:type sdtl:Program .
        ?program sdtl:Commands ?command .
        ?command sdtl:Variable/sdtl:VariableName ?affected_variable .
        ?command sdtl:Expression ?expression .
        ?expression (sdtl:Arguments/sdtl:ArgumentValue)+/sdtl:VariableName ?affecting_variable .
        ?command sdtl:SourceInformation ?source_info .
        ?source_info sdtl:LineNumberStart ?source_line .
        ?source_info sdtl:OriginalSourceText ?source_text .
    } ORDER BY ?affected_variable ?affecting_variable ?source_line

__END_QUERY__

------------------------------------------- Q9 OUTPUTS ------------------------------------------------

affected_variable | affecting_variable | command    | source_line | source_text
===========================================================================================================
B                 | B                  | :compute/2 | 12          | df['B'] = df.B + 6.5
C                 | A                  | :compute/3 | 16          | df['C'] = df.A - df.B
C                 | B                  | :compute/3 | 16          | df['C'] = df.A - df.B
Celsius           | Fahrenheit         | :compute/4 | 24          | temps = temps.assign(Celsius=((temps.Fahrenheit - 32) * 5 / 9))
Kelvin            | Celsius            | :compute/5 | 28          | temps = temps.assign(Kelvin=(temps.Celsius + 273))


******************************************* EXAMPLE GRAPH-1 ************************************************

# DATAFRAME FLOW THROUGH COMMANDS

blazegraph report << '__END_REPORT_TEMPLATE__'

    {{{
        {{ include "../../common/graphviz.g" }}
        {{ include "../../common/sdtl.g" }}
    }}}

    {{ gv_graph "sdtl_program" }}

    {{ gv_title "Dataframe-flow through commands" }}

    {{ gv_cluster "program_graph" }}

    # command nodes
    {{ sdtl_program_node_style }}
    node[width=8]
    {{ with $ProgramID := sdtl_select_program | value }}                                    \

        {{ range $Command := (sdtl_select_commands $ProgramID | rows ) }}                   \
            {{ gv_labeled_node (index $Command 0) (index $Command 1) }}
        {{ end }}                                                                           \

        # dataframe edges
        {{ range $Edge := (sdtl_select_dataframe_edges $ProgramID | rows) }}                \
            {{ gv_edge (index $Edge 0) (index $Edge 1) }}
        {{ end }}                                                                           \
                                                                                            \
    {{ end }}                                                                               \
                                                                                            \
    {{ gv_cluster_end }}

    {{ gv_end }}                                                                            \

__END_REPORT_TEMPLATE__

----------------------------------------- GRAPH-1 DOT OUTPUT -----------------------------------------------

digraph sdtl_program {
rankdir=TB

fontname=Courier; fontsize=18; labelloc=t
label="Dataframe-flow through commands"

subgraph cluster_program_graph { label=""; color=white; penwidth=0
subgraph cluster_program_graph_inner { label=""; color=white

# command nodes
node[shape=box style="filled" fillcolor="#CCFFCC" peripheries=1 fontname=Courier]
node[width=8]

":load/1" [label="df = pd.read_csv('../data/df.csv')"]
":compute/1" [label="df['A'] = 3"]
":compute/2" [label="df['B'] = df.B + 6.5"]
":compute/3" [label="df['C'] = df.A - df.B"]
":load/2" [label="temps = pd.read_csv('../data/temps.csv')"]
":compute/4" [label="temps = temps.assign(Celsius=((temps.Fahrenheit - 32) * 5 / 9))"]
":compute/5" [label="temps = temps.assign(Kelvin=(temps.Celsius + 273))"]
":save/1" [label="df.to_csv('outputs/df_updated.csv', index=False)"]
":save/2" [label="temps.to_csv('outputs/temps_updated.csv', index=False)"]

# dataframe edges
":compute/1" -> ":compute/2"
":compute/2" -> ":compute/3"
":compute/3" -> ":save/1"
":compute/4" -> ":compute/5"
":compute/5" -> ":save/2"
":load/1" -> ":compute/1"
":load/2" -> ":compute/4"
}}

}
