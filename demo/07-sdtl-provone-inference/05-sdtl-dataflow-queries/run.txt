
******************************************* EXAMPLE SETUP ************************************************

# IMPORT SDTL

geist destroy --dataset kb --quiet
geist create --dataset kb --quiet 
geist import --format jsonld --file ../data/compute-sdth.jsonld

------------------------------------------- SETUP OUTPUTS ------------------------------------------------



******************************************* EXAMPLE E1 ************************************************

# EXPORT AS N-TRIPLES

geist export --format nt | sort

------------------------------------------- E1 OUTPUTS ------------------------------------------------

<http://wholetale.org/program/1119/dataframe/1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <https://rdf-vocabulary.ddialliance.org/sdth#Dataframe> .
<http://wholetale.org/program/1119/dataframe/1> <https://rdf-vocabulary.ddialliance.org/sdth#hasName> "df"^^<http://www.w3.org/2001/XMLSchema#string> .
<http://wholetale.org/program/1119/dataframe/1> <https://rdf-vocabulary.ddialliance.org/sdth#includesVariable> <http://wholetale.org/program/1119/variable/1> .
<http://wholetale.org/program/1119/dataframe/1> <https://rdf-vocabulary.ddialliance.org/sdth#includesVariable> <http://wholetale.org/program/1119/variable/2> .
<http://wholetale.org/program/1119/file/1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <https://rdf-vocabulary.ddialliance.org/sdth#File> .
<http://wholetale.org/program/1119/file/1> <https://rdf-vocabulary.ddialliance.org/sdth#hasFormat> "csv"^^<http://www.w3.org/2001/XMLSchema#string> .
<http://wholetale.org/program/1119/file/1> <https://rdf-vocabulary.ddialliance.org/sdth#hasName> "df.csv"^^<http://www.w3.org/2001/XMLSchema#string> .
<http://wholetale.org/program/1119/file/2> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <https://rdf-vocabulary.ddialliance.org/sdth#File> .
<http://wholetale.org/program/1119/file/2> <https://rdf-vocabulary.ddialliance.org/sdth#hasFormat> "csv"^^<http://www.w3.org/2001/XMLSchema#string> .
<http://wholetale.org/program/1119/file/2> <https://rdf-vocabulary.ddialliance.org/sdth#hasName> "df_updated.csv"^^<http://www.w3.org/2001/XMLSchema#string> .
<http://wholetale.org/program/1119/program/1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <https://rdf-vocabulary.ddialliance.org/sdth#Program> .
<http://wholetale.org/program/1119/program/1> <https://rdf-vocabulary.ddialliance.org/sdth#hasProgramStep> <http://wholetale.org/program/1119/step/1> .
<http://wholetale.org/program/1119/program/1> <https://rdf-vocabulary.ddialliance.org/sdth#hasProgramStep> <http://wholetale.org/program/1119/step/8> .
<http://wholetale.org/program/1119/step/1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <https://rdf-vocabulary.ddialliance.org/sdth#ProgramStep> .
<http://wholetale.org/program/1119/step/1> <https://rdf-vocabulary.ddialliance.org/sdth#assignsVariable> <http://wholetale.org/program/1119/variable/1> .
<http://wholetale.org/program/1119/step/1> <https://rdf-vocabulary.ddialliance.org/sdth#assignsVariable> <http://wholetale.org/program/1119/variable/2> .
<http://wholetale.org/program/1119/step/1> <https://rdf-vocabulary.ddialliance.org/sdth#hasSourceCode> "df = pd.read_csv('../data/df.csv')"^^<http://www.w3.org/2001/XMLSchema#string> .
<http://wholetale.org/program/1119/step/1> <https://rdf-vocabulary.ddialliance.org/sdth#loadsFile> <http://wholetale.org/program/1119/file/1> .
<http://wholetale.org/program/1119/step/1> <https://rdf-vocabulary.ddialliance.org/sdth#producesDataframe> <http://wholetale.org/program/1119/dataframe/1> .
<http://wholetale.org/program/1119/step/8> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <https://rdf-vocabulary.ddialliance.org/sdth#ProgramStep> .
<http://wholetale.org/program/1119/step/8> <https://rdf-vocabulary.ddialliance.org/sdth#consumesDataframe> <http://wholetale.org/program/1119/dataframe/1> .
<http://wholetale.org/program/1119/step/8> <https://rdf-vocabulary.ddialliance.org/sdth#hasSourceCode> "df.to_csv('outputs/df_updated.csv', index=False)"^^<http://www.w3.org/2001/XMLSchema#string> .
<http://wholetale.org/program/1119/step/8> <https://rdf-vocabulary.ddialliance.org/sdth#savesFile> <http://wholetale.org/program/1119/file/2> .
<http://wholetale.org/program/1119/step/8> <https://rdf-vocabulary.ddialliance.org/sdth#usesVariable> <http://wholetale.org/program/1119/variable/1> .
<http://wholetale.org/program/1119/step/8> <https://rdf-vocabulary.ddialliance.org/sdth#usesVariable> <http://wholetale.org/program/1119/variable/2> .
<http://wholetale.org/program/1119/variable/1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <stdh:Variable> .
<http://wholetale.org/program/1119/variable/1> <https://rdf-vocabulary.ddialliance.org/sdth#hasName> "A"^^<http://www.w3.org/2001/XMLSchema#string> .
<http://wholetale.org/program/1119/variable/2> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <https://rdf-vocabulary.ddialliance.org/sdth#Variable> .
<http://wholetale.org/program/1119/variable/2> <https://rdf-vocabulary.ddialliance.org/sdth#hasName> "B"^^<http://www.w3.org/2001/XMLSchema#string> .


******************************************* EXAMPLE Q1 ************************************************

# WHAT STEPS ARE EXECUTED BY THE PROGRAM?

geist query --format table << __END_QUERY__

    PREFIX sdth: <https://rdf-vocabulary.ddialliance.org/sdth#>
    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

    SELECT DISTINCT ?step ?step_source_text
    WHERE {
        ?program rdf:type sdth:Program .
        ?program sdth:hasProgramStep ?step .
        ?step sdth:hasSourceCode ?step_source_text .
    }

__END_QUERY__

------------------------------------------- Q1 OUTPUTS ------------------------------------------------

step                                     | step_source_text
===========================================================================================
http://wholetale.org/program/1119/step/1 | df = pd.read_csv('../data/df.csv')
http://wholetale.org/program/1119/step/8 | df.to_csv('outputs/df_updated.csv', index=False)


******************************************* EXAMPLE Q2 ************************************************

# WHAT DATA FILES ARE LOADED BY THE PROGRAM?

geist query --format table << __END_QUERY__

    PREFIX sdth: <https://rdf-vocabulary.ddialliance.org/sdth#>

    SELECT DISTINCT ?file_name ?step ?step_source_text
    WHERE {
        ?program rdf:type sdth:Program .
        ?program sdth:hasProgramStep ?step .
        ?step sdth:loadsFile ?file .
        ?file sdth:hasName ?file_name .
        ?step sdth:hasSourceCode ?step_source_text .
    }

__END_QUERY__

------------------------------------------- Q2 OUTPUTS ------------------------------------------------

file_name | step                                     | step_source_text
=======================================================================================
df.csv    | http://wholetale.org/program/1119/step/1 | df = pd.read_csv('../data/df.csv')


******************************************* EXAMPLE Q3 ************************************************

# WHAT DATA FILES ARE SAVED BY THE PROGRAM?

geist query --format table << __END_QUERY__

    PREFIX sdth: <https://rdf-vocabulary.ddialliance.org/sdth#>

    SELECT DISTINCT ?file_name ?step ?step_source_text
    WHERE {
        ?program rdf:type sdth:Program .
        ?program sdth:hasProgramStep ?step .
        ?step sdth:savesFile ?file .
        ?file sdth:hasName ?file_name .
        ?step sdth:hasSourceCode ?step_source_text .
    }

__END_QUERY__

------------------------------------------- Q3 OUTPUTS ------------------------------------------------

file_name      | step                                     | step_source_text
=============================================================================================================
df_updated.csv | http://wholetale.org/program/1119/step/8 | df.to_csv('outputs/df_updated.csv', index=False)


******************************************* EXAMPLE Q4 ************************************************

# WHAT VARIABLES ARE LOADED BY THE PROGRAM?

geist query --format table << __END_QUERY__

    PREFIX sdth: <https://rdf-vocabulary.ddialliance.org/sdth#>

    SELECT DISTINCT ?dataframe_name ?variable_name ?step_source_text
    WHERE {
        ?program rdf:type sdth:Program .
        ?program sdth:hasProgramStep ?step .
        ?step sdth:loadsFile ?file .
        ?step sdth:producesDataframe ?dataframe .
        ?dataframe sdth:includesVariable ?variable .
        ?variable sdth:hasName ?variable_name .
        ?dataframe sdth:hasName ?dataframe_name .
        ?step sdth:hasSourceCode ?step_source_text .
    } ORDER BY ?variable_name ?source_line

__END_QUERY__

------------------------------------------- Q4 OUTPUTS ------------------------------------------------

dataframe_name | variable_name | step_source_text
==================================================
df             | A             | df = pd.read_csv('../data/df.csv')
df             | B             | df = pd.read_csv('../data/df.csv')


******************************************* EXAMPLE Q5 ************************************************

# WHAT VARIABLES ARE SAVED BY THE SCRIPT?

geist query --format table << __END_QUERY__

    PREFIX sdth: <https://rdf-vocabulary.ddialliance.org/sdth#>

    SELECT DISTINCT ?dataframe_name ?variable_name ?step_source_text
    WHERE {
        ?program rdf:type sdth:Program .
        ?program sdth:hasProgramStep ?step .
        ?step sdth:savesFile ?file .
        ?step sdth:consumesDataframe ?dataframe .
        ?dataframe sdth:includesVariable ?variable .
        ?variable sdth:hasName ?variable_name .
        ?dataframe sdth:hasName ?dataframe_name .
        ?step sdth:hasSourceCode ?step_source_text .

    } ORDER BY ?saved_variable ?source_line

__END_QUERY__

------------------------------------------- Q5 OUTPUTS ------------------------------------------------

dataframe_name | variable_name | step_source_text
==========================================================
df             | A             | df.to_csv('outputs/df_updated.csv', index=False)
df             | B             | df.to_csv('outputs/df_updated.csv', index=False)

